"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var Observable_1 = require("rxjs/internal/Observable");
var Subject_1 = require("../Subject");
function share() {
    return function (source) { return new SharedObservable(source); };
}
exports.share = share;
var SharedObservable = /** @class */ (function (_super) {
    __extends(SharedObservable, _super);
    function SharedObservable(_source) {
        var _this = _super.call(this) || this;
        _this._source = _source;
        _this._refCount = 0;
        return _this;
    }
    SharedObservable.prototype._init = function (mut) {
        var _this = this;
        this._refCount++;
        if (!this._subject || this._subject.closed) {
            this._subject = new Subject_1.Subject();
            this._connection = null;
        }
        var innerSub = this._subject.subscribe(mut);
        if (!this._connection || this._connection.closed) {
            this._connection = this._source.subscribe(this._subject);
        }
        this._connection.add(innerSub);
        return function () {
            _this._refCount--;
            innerSub.unsubscribe();
            if (_this._refCount === 0) {
                _this._connection.unsubscribe();
            }
        };
    };
    return SharedObservable;
}(Observable_1.Observable));
//# sourceMappingURL=share.js.map