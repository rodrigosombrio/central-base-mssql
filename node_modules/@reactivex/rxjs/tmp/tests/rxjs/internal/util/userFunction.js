"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ERROR_OBJECT = {
    error: null,
};
/**
 * Executes a user-provided function within a try-catch, and returns either the result
 * or returns {@link ERROR_OBJECT} if an error has occurred. Use {@link resultIsError} to
 * verify whether the result is an error or not.
 *
 * @param fn the user-provided function to wrap in some error handling for safety
 * @param args The arguments to execute the user-provided function with.
 */
function tryUserFunction(fn, args, context) {
    ERROR_OBJECT.error = null;
    var result;
    try {
        result = fn.apply(context, args);
    }
    catch (err) {
        ERROR_OBJECT.error = err;
        return ERROR_OBJECT;
    }
    return result;
}
exports.tryUserFunction = tryUserFunction;
/**
 * Used to verify whether the result of {@link tryUserFunction} is an error or not. If
 * this returns true, check {@link ERROR_OBJECT}'s error property for the error value.
 */
function resultIsError(result) {
    return result === ERROR_OBJECT;
}
exports.resultIsError = resultIsError;
//# sourceMappingURL=userFunction.js.map