"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Observable_1 = require("rxjs/internal/Observable");
var Subscription_1 = require("rxjs/internal/Subscription");
var from_1 = require("rxjs/internal/create/from");
/* tslint:enable:max-line-length */
function combineLatest() {
    var args = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
    }
    var sources = args;
    if (sources && sources.length === 1 && Array.isArray(sources[0])) {
        sources = sources[0];
    }
    return new Observable_1.Observable(function (subscriber) {
        var values = new Array(sources.length);
        var emittedOnce = 0;
        var allHaveEmittedOnce = false;
        var completed = 0;
        var subscription = new Subscription_1.Subscription();
        var _loop_1 = function (s) {
            var first = true;
            subscription.add(from_1.from(sources[s]).subscribe({
                next: function (value) {
                    values[s] = value;
                    if (!allHaveEmittedOnce && first) {
                        emittedOnce++;
                        first = false;
                        allHaveEmittedOnce = emittedOnce === sources.length;
                    }
                    if (allHaveEmittedOnce) {
                        subscriber.next(values.slice(0));
                    }
                },
                error: function (err) {
                    subscriber.error(err);
                },
                complete: function () {
                    completed++;
                    if (completed === sources.length) {
                        subscriber.complete();
                    }
                }
            }));
        };
        for (var s = 0; s < sources.length; s++) {
            _loop_1(s);
        }
        return subscription;
    });
}
exports.combineLatest = combineLatest;
//# sourceMappingURL=combineLatest.js.map